version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kafu-postgres-dev
    environment:
      POSTGRES_DB: kafu_system
      POSTGRES_USER: kafu_user
      POSTGRES_PASSWORD: kafu_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kafu_user -d kafu_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development Mode)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: kafu-backend-dev
    environment:
      DATABASE_URL: postgresql://kafu_user:kafu_password@postgres:5432/kafu_system?schema=public
      JWT_SECRET: your-super-secret-jwt-key-for-docker
      JWT_EXPIRES_IN: 7d
      PORT: 5000
      NODE_ENV: development
      MAX_FILE_SIZE: 10485760
      UPLOAD_PATH: ./uploads
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App (Development Mode)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: kafu-frontend-dev
    environment:
      REACT_APP_API_URL: http://localhost:5001/api
      CHOKIDAR_USEPOLLING: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data_dev:
